function externalEnergy = importExternalEnergy(filename, dataLines)
%IMPORTFILE Import data from a text file
%  HAMENERGYREP = IMPORTFILE(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  HAMENERGYREP = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  HAMenergyrep = importfile("D:\EERL\2019_NYISO\2019_Balancing_Market_Advisory\20190101HAM_energy_rep.csv", [2, 25]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 03/15/2021 14:44:49

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, inf];
end

%% Test read to determine column number
testTable = readtable(filename, "DatetimeType", "text", "ReadVariableNames", false);
numColumn = width(testTable);
%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", numColumn);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
if numColumn == 61
    opts.VariableNames = ["TimeStamp", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15", "Var16", "Var17", "Var18", "Var19", "Var20", "Var21", "NetImports", "DNI_HQ", "DNI_NPX", "DNI_OH", "DNI_PJM", "DNI_NYISO", "DNI_DELTA", "Var29", "Var30", "Var31", "Var32", "Var33", "Var34", "Var35", "Var36", "Var37", "Var38", "Var39", "Var40", "Var41", "Var42", "Var43", "Var44", "Var45", "Var46", "Var47", "Var48", "Var49", "Var50", "HQProxyDNIHQCD", "HQProxyDNIHQEX", "HQProxyDNIHQNY", "NPXProxyDNINENP", "NPXProxyDNINPXAC", "NPXProxyDNINPXCSC", "OHProxyDNIOHAC", "PJMProxyDNIPJDF", "PJMProxyDNIPJMAC", "PJMProxyDNIPJMHTP", "PJMProxyDNIPJMVFT"];
    opts.SelectedVariableNames = ["TimeStamp", "NetImports", "DNI_HQ", "DNI_NPX", "DNI_OH", "DNI_PJM", "DNI_NYISO", "DNI_DELTA", "HQProxyDNIHQCD", "HQProxyDNIHQEX", "HQProxyDNIHQNY", "NPXProxyDNINENP", "NPXProxyDNINPXAC", "NPXProxyDNINPXCSC", "OHProxyDNIOHAC", "PJMProxyDNIPJDF", "PJMProxyDNIPJMAC", "PJMProxyDNIPJMHTP", "PJMProxyDNIPJMVFT"];
    opts.VariableTypes = ["datetime", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];
elseif numColumn == 58
    opts.VariableNames = ["TimeStamp", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15", "Var16", "Var17", "Var18", "Var19", "Var20", "Var21", "NetImports", "DNI_HQ", "DNI_NPX", "DNI_OH", "DNI_PJM", "DNI_NYISO", "DNI_DELTA", "Var29", "Var30", "Var31", "Var32", "Var33", "Var34", "Var35", "Var36", "Var37", "Var38", "Var39", "Var40", "Var41", "Var42", "Var43", "Var44", "Var45", "Var46", "Var47", "Var48", "HQProxyDNIHQCD", "HQProxyDNIHQEX", "HQProxyDNIHQNY", "NPXProxyDNINENP", "NPXProxyDNINPXAC", "NPXProxyDNINPXCSC", "OHProxyDNIOHAC", "PJMProxyDNIPJDF", "PJMProxyDNIPJMAC", "PJMProxyDNIPJMVFT"];
    opts.SelectedVariableNames = ["TimeStamp", "NetImports", "DNI_HQ", "DNI_NPX", "DNI_OH", "DNI_PJM", "DNI_NYISO", "DNI_DELTA", "HQProxyDNIHQCD", "HQProxyDNIHQEX", "HQProxyDNIHQNY", "NPXProxyDNINENP", "NPXProxyDNINPXAC", "NPXProxyDNINPXCSC", "OHProxyDNIOHAC", "PJMProxyDNIPJDF", "PJMProxyDNIPJMAC", "PJMProxyDNIPJMVFT"];
    opts.VariableTypes = ["datetime", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];
elseif numColumn == 55
    opts.VariableNames = ["TimeStamp", "Var2", "Var3", "Var4", "Var5", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11", "Var12", "Var13", "Var14", "Var15", "Var16", "Var17", "Var18", "Var19", "Var20", "Var21", "NetImports", "DNI_HQ", "DNI_NPX", "DNI_OH", "DNI_PJM", "DNI_NYISO", "DNI_DELTA", "Var29", "Var30", "Var31", "Var32", "Var33", "Var34", "Var35", "Var36", "Var37", "Var38", "Var39", "Var40", "Var41", "Var42", "Var43", "Var44", "Var45", "Var46", "HQProxyDNIHQCD", "HQProxyDNIHQEX", "HQProxyDNIHQNY", "NPXProxyDNINENP", "NPXProxyDNINPXAC", "OHProxyDNIOHAC", "PJMProxyDNIPJDF", "PJMProxyDNIPJMAC", "PJMProxyDNIPJMVFT"];
    opts.SelectedVariableNames = ["TimeStamp", "NetImports", "DNI_HQ", "DNI_NPX", "DNI_OH", "DNI_PJM", "DNI_NYISO", "DNI_DELTA", "HQProxyDNIHQCD", "HQProxyDNIHQEX", "HQProxyDNIHQNY", "NPXProxyDNINENP", "NPXProxyDNINPXAC", "OHProxyDNIOHAC", "PJMProxyDNIPJDF", "PJMProxyDNIPJMAC", "PJMProxyDNIPJMVFT"];
    opts.VariableTypes = ["datetime", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double"];
else
    warning('Wrong column number!');
end

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "TimeStamp", "InputFormat", "MM/dd/yyyy HH:mm");

% Import the data
externalEnergy = readtable(filename, opts);
externalEnergy = externalEnergy(~ismissing(externalEnergy.TimeStamp), :);

%% Add missing data
if numColumn == 58
    externalEnergy.PJMProxyDNIPJMHTP = zeros(height(externalEnergy), 1);
    externalEnergy = movevars(externalEnergy, "PJMProxyDNIPJMHTP", "before", "PJMProxyDNIPJMVFT");
elseif numColumn == 55
    externalEnergy.PJMProxyDNIPJMHTP = zeros(height(externalEnergy), 1);
    externalEnergy = movevars(externalEnergy, "PJMProxyDNIPJMHTP", "before", "PJMProxyDNIPJMVFT");
    externalEnergy.NPXProxyDNINPXCSC = zeros(height(externalEnergy), 1);
    externalEnergy = movevars(externalEnergy, "NPXProxyDNINPXCSC", "before", "OHProxyDNIOHAC");
end
end